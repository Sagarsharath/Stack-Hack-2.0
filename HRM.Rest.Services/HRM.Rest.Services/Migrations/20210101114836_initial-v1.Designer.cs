// <auto-generated />
using System;
using HRM.Rest.Services.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRM.Rest.Services.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20210101114836_initial-v1")]
    partial class initialv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADDRESS_INFO");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("DEPARTMENTS");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Human Resources"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Devops Engineering"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Customer Support"
                        });
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.EmployeeAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ClockIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClockOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserInfoUserId")
                        .HasColumnType("int");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmployeeOnLeave")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoUserId");

                    b.ToTable("EMPLOYEE_ATTENDANCE");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.EmployeeFinances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AmountSanctioned")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSanctioned")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("Tenure")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoUserId");

                    b.ToTable("EMPLOYEE_FINANCE");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.FinanceTypes", b =>
                {
                    b.Property<int>("FinanceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FinanceTypName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FinanceTypeId");

                    b.ToTable("FINANCE_TYPES");

                    b.HasData(
                        new
                        {
                            FinanceTypeId = 1,
                            FinanceTypName = "Advance Salary"
                        },
                        new
                        {
                            FinanceTypeId = 2,
                            FinanceTypName = "Bonus"
                        },
                        new
                        {
                            FinanceTypeId = 3,
                            FinanceTypName = "Loan"
                        });
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("ROLES");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("Compensation")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryAddressId")
                        .HasColumnType("int");

                    b.Property<string>("SecondaryContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AddressId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SecondaryAddressId");

                    b.ToTable("USER_INFO");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.EmployeeAttendance", b =>
                {
                    b.HasOne("HRM.Rest.Services.DAL.Models.UserInfo", null)
                        .WithMany("EmployeeAttendances")
                        .HasForeignKey("UserInfoUserId");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.EmployeeFinances", b =>
                {
                    b.HasOne("HRM.Rest.Services.DAL.Models.UserInfo", null)
                        .WithMany("EmployeeFinances")
                        .HasForeignKey("UserInfoUserId");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.UserInfo", b =>
                {
                    b.HasOne("HRM.Rest.Services.DAL.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("HRM.Rest.Services.DAL.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("HRM.Rest.Services.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("HRM.Rest.Services.DAL.Models.Address", "SecondaryAddress")
                        .WithMany()
                        .HasForeignKey("SecondaryAddressId");

                    b.Navigation("Address");

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("SecondaryAddress");
                });

            modelBuilder.Entity("HRM.Rest.Services.DAL.Models.UserInfo", b =>
                {
                    b.Navigation("EmployeeAttendances");

                    b.Navigation("EmployeeFinances");
                });
#pragma warning restore 612, 618
        }
    }
}
